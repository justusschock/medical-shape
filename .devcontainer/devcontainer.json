{
    "name": "Medical Shape",
    "image": "justusschock/medical-shape:dev-3.8",
    // If you want to use a different Python version, uncomment the build object below
    // "build": {
    //     "dockerfile": "Dockerfile",
    //     "context": "..",
    //     "args": {
    //         // Update 'VARIANT' to pick a Python version: 3, 3.6, 3.7, 3.8, 3.9
    //         "VARIANT": "3.9",
    //         // Options
    //         "NODE_VERSION": "none"
    //     }
    // },
    "runArgs": [
        "--ipc=host",
    ],
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "editor.formatOnSave": true,
        "editor.rulers": [
            120
        ],
        "python.pythonPath": "/usr/local/bin/python",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance",
        "python.autoComplete.addBrackets": true,
        "python.analysis.autoImportCompletions": true,
        "python.analysis.completeFunctionParens": true,
        "python.analysis.autoSearchPaths": true,
        "python.analysis.useImportHeuristic": true,
        "python.sortImports": true,
        "python.sortImports.args": [
            "--settings-path=${workspaceFolder}/pyproject.toml",
        ],
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": [
            "--config=${workspaceFolder}/pyproject.toml"
        ],
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Args": [
            "--config=${workspaceFolder}/setup.cfg",
            "--verbose"
        ],
        "python.testing.pytestArgs": [
            "tests"
        ],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "restructuredtext.confPath": "${workspaceFolder}/docs/source",
        "restructuredtext.builtDocumentationPath": "${workspaceFolder}/docs/build",
        "restructuredtext.languageServer.disabled": false,
        "[python]": {
            "editor.codeActionsOnSave": {
                "source.organizeImports": true,
            }
        }
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "visualstudioexptteam.vscodeintellicode",
        "kevinrose.vsc-python-indent",
        "littlefoxteam.vscode-python-test-adapter",
        "hbenl.vscode-test-explorer",
        "medo64.render-crlf",
        "shardulm94.trailing-spaces",
        "njqdev.vscode-python-typehint",
        "lextudio.restructuredtext",
        "trond-snekvik.simple-rst",
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "pre-commit install",
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode"
}
